name: Publish Package to Npm
on:
  pull_request:
    branches: [ master ]
    # types: [ closed ]
jobs:
  publish:
    # if: ${{ startsWith(github.head_ref, 'release/') && (github.event.pull_request.merged == true) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Get version
        run:
          echo "VERSION=$(echo ${{ github.head_ref }} | cut -b 9-)" >> $GITHUB_ENV
      - name: Run test with local blockchain
        uses: ./
        id: test-pipeline
      - name: Publish package
        run: |
          git checkout master
          yarn
          yarn publish --access public
          git tag ${{ env.VERSION }}
          git push --tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  execute_on_failure:
    needs: [ publish ]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Get error log
        run: echo "ERROR_LOG=$(gh run view ${{ github.run_id }} --log | grep error)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify error to slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Publishing ${{ env.VERSION }} failed for [PR#${{ github.event.number }}](${{ github.event.pull_request.html_url }})",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PUBLISHING ${{ env.VERSION }} FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Publishing ${{ env.VERSION }} failed for [PR#${{ github.event.number }}](${{ github.event.pull_request.html_url }})"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n${{ env.ERROR_LOG }}\nCheck full logs in ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
