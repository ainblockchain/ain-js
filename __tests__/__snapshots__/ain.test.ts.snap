// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ain-js Database evalOwner 1`] = `
{
  "code": 0,
  "matched": {
    "closestOwner": {
      "config": {
        "owners": {
          "*": {
            "branch_owner": true,
            "write_function": true,
            "write_owner": true,
            "write_rule": true,
          },
          "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1": {
            "branch_owner": true,
            "write_function": true,
            "write_owner": true,
            "write_rule": true,
          },
        },
      },
      "path": [
        "apps",
        "bfan",
        "users",
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
      ],
    },
    "matchedOwnerPath": [
      "apps",
      "bfan",
      "users",
      "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
    ],
    "subtreeOwners": [],
  },
}
`;

exports[`ain-js Database evalRule: true 1`] = `
{
  "code": 0,
  "matched": {
    "state": {
      "closestRule": {
        "config": null,
        "path": [],
      },
      "matchedRulePath": [
        "apps",
        "bfan",
        "users",
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
        "can",
        "write",
      ],
      "matchedValuePath": [
        "apps",
        "bfan",
        "users",
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
        "can",
        "write",
      ],
      "pathVars": {},
    },
    "write": {
      "closestRule": {
        "config": {
          "write": "true",
        },
        "path": [
          "apps",
          "bfan",
          "users",
          "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
          "can",
          "write",
        ],
      },
      "matchedRulePath": [
        "apps",
        "bfan",
        "users",
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
        "can",
        "write",
      ],
      "matchedValuePath": [
        "apps",
        "bfan",
        "users",
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
        "can",
        "write",
      ],
      "pathVars": {},
      "subtreeRules": [],
    },
  },
}
`;

exports[`ain-js Database get with options 1`] = `null`;

exports[`ain-js Database get with options 2`] = `
{
  "can": {
    "write": -5,
  },
  "username": "test_user",
}
`;

exports[`ain-js Database get with options 3`] = `
{
  "can": {
    "#state_ph": "0xaf1e44f55da6d7e1aa784dd38372c2c2939570254c6b3f36f80b4878590a9efa",
  },
  "username": "test_user",
}
`;

exports[`ain-js Database get with options 4`] = `
{
  "#state_ph": "0x3c067fd41205e87fcead2107a0f346881ea7d95249cdbe34d3d72e28e7c9ecd5",
  "#state_ph:username": "0xe9acb84e18d9ec64c66358f53c4fec3945eb065a3e98de907d8d80dc1361c82f",
  "can": {
    "#state_ph": "0xaf1e44f55da6d7e1aa784dd38372c2c2939570254c6b3f36f80b4878590a9efa",
    "#state_ph:write": "0x60ae6f7084539f2137ca3b45aa2e0e3b6d786a17c8de32110a884e285ea6a00c",
    "write": -5,
  },
  "username": "test_user",
}
`;

exports[`ain-js Database get with options 5`] = `
{
  "#num_children": 2,
  "#num_children:username": 0,
  "#num_parents": 1,
  "#num_parents:username": 1,
  "#tree_bytes": 698,
  "#tree_bytes:username": 178,
  "#tree_height": 2,
  "#tree_height:username": 0,
  "#tree_max_siblings": 2,
  "#tree_max_siblings:username": 1,
  "#tree_size": 4,
  "#tree_size:username": 1,
  "can": {
    "#num_children": 1,
    "#num_children:write": 0,
    "#num_parents": 1,
    "#num_parents:write": 1,
    "#tree_bytes": 338,
    "#tree_bytes:write": 168,
    "#tree_height": 1,
    "#tree_height:write": 0,
    "#tree_max_siblings": 1,
    "#tree_max_siblings:write": 1,
    "#tree_size": 2,
    "#tree_size:write": 1,
    "write": -5,
  },
  "username": "test_user",
}
`;

exports[`ain-js Database getProofHash 1`] = `"0x88496dfee3566db91f487aa4cbf69a0c42a3e2a5d0a65bfd4897d699e8734785"`;

exports[`ain-js Database getStateInfo 1`] = `
{
  "#num_children": 1,
  "#state_ph": "0x985a1f057d5047b1dee392127eb776571fbbe79da7ae6114f8f8f18c4f786135",
  "#tree_bytes": 1840,
  "#tree_height": 2,
  "#tree_max_siblings": 1,
  "#tree_size": 3,
  "#version": "erased",
}
`;

exports[`ain-js Database matchFunction 1`] = `
{
  "matched_config": {
    "config": {
      "0xFUNCTION_HASH": {
        "function_id": "0xFUNCTION_HASH",
        "function_type": "REST",
        "function_url": "https://events.ainetwork.ai/trigger",
      },
    },
    "path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
  },
  "matched_path": {
    "path_vars": {},
    "ref_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
    "target_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
  },
  "subtree_configs": [],
}
`;

exports[`ain-js Database matchOwner 1`] = `
{
  "matched_config": {
    "config": {
      "owners": {
        "*": {
          "branch_owner": true,
          "write_function": true,
          "write_owner": true,
          "write_rule": true,
        },
        "0x09A0d53FDf1c36A131938eb379b98910e55EEfe1": {
          "branch_owner": true,
          "write_function": true,
          "write_owner": true,
          "write_rule": true,
        },
      },
    },
    "path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
  },
  "matched_path": {
    "target_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
  },
  "subtree_configs": [],
}
`;

exports[`ain-js Database matchRule 1`] = `
{
  "state": {
    "matched_config": {
      "config": null,
      "path": "/",
    },
    "matched_path": {
      "path_vars": {},
      "ref_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
      "target_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
    },
  },
  "write": {
    "matched_config": {
      "config": {
        "write": "true",
      },
      "path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
    },
    "matched_path": {
      "path_vars": {},
      "ref_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
      "target_path": "/apps/bfan/users/0x09A0d53FDf1c36A131938eb379b98910e55EEfe1",
    },
    "subtree_configs": [
      {
        "config": {
          "write": "true",
        },
        "path": "/can/write",
      },
      {
        "config": {
          "write": "false",
        },
        "path": "/cannot/write",
      },
    ],
  },
}
`;
